---
import BaseLayout from './BaseLayout.astro';
import Header from '../components/Header.astro';
import Sidebar from '../components/Sidebar.astro';
import AIPanel from '../components/AIPanel.astro';
import type { Locale } from '../i18n/locales';

export interface Props {
  title?: string;
  description?: string;
  locale?: Locale;
  slug?: string;
}

const { title, description, locale = 'en', slug = '' } = Astro.props;
---

<BaseLayout title={title} description={description} locale={locale} slug={slug}>
  <div class="docs-layout">
    <Header />

    <div class="docs-content">
      <Sidebar />

      <main class="content-area">
        <article class="prose">
          <slot />
        </article>
      </main>

      <AIPanel />
    </div>
  </div>
</BaseLayout>

<script>
  // Aggressive scroll prevention
  if ('scrollRestoration' in history) {
    history.scrollRestoration = 'manual';
  }

  // Immediately set scroll to top
  window.scrollTo(0, 0);
  document.documentElement.scrollTop = 0;
  document.body.scrollTop = 0;

  // Prevent any scroll attempts during page load
  let isLoading = true;
  const preventScroll = (e: Event) => {
    if (isLoading) {
      window.scrollTo(0, 0);
      document.documentElement.scrollTop = 0;
      document.body.scrollTop = 0;
    }
  };

  window.addEventListener('scroll', preventScroll, { passive: false });

  // Stop preventing scroll after page is fully loaded
  window.addEventListener('load', () => {
    setTimeout(() => {
      isLoading = false;
      window.removeEventListener('scroll', preventScroll);
      window.scrollTo(0, 0);
      document.documentElement.scrollTop = 0;
      document.body.scrollTop = 0;
    }, 100);
  });

  // Also reset on DOMContentLoaded
  document.addEventListener('DOMContentLoaded', () => {
    window.scrollTo(0, 0);
    document.documentElement.scrollTop = 0;
    document.body.scrollTop = 0;
  });
</script>

<style>
  .docs-layout {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
  }

  .docs-content {
    display: flex;
    flex: 1;
    position: relative;
  }

  .content-area {
    flex: 1;
    padding-top: var(--space-12);
    padding-right: var(--space-8);
    padding-bottom: var(--space-8);
    padding-left: var(--space-8);
    max-width: var(--layout-content-max-width);
    margin: 0 auto;
    width: 100%;
  }

  .prose {
    max-width: 100%;
  }

  /* Responsive Design */
  @media (max-width: 1024px) {
    .content-area {
      padding: var(--spacing-6);
    }
  }

  @media (max-width: 768px) {
    .docs-content {
      flex-direction: column;
    }

    .content-area {
      padding: var(--spacing-4);
    }
  }
</style>
